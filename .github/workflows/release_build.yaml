# Reference:
# https://eugene-babichenko.github.io/blog/2020/05/09/github-actions-cross-platform-auto-releases/

name: release
on:
  push:
    # Enable when testing release infrastructure on a branch.
    branches:
    - features/continuous_delivery
    # tags:
    # - "[0-9]+.[0-9]+.[0-9]+"
jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          #save as draft to manually release it later and add the body from changelog
          draft: true
          #while version is still below 1.0.0, mark the release as a prerelease
          prerelease: true

  release_assets:
    name: Release assets
    needs: create_release # we need to know the upload URL
    runs-on: ${{ matrix.platform }} # we run many different builds
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        rust:
          - stable
          - beta
          - nightly
          - 1.58.1  # MSRV
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Install ${{ matrix.rust }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
      #use caching for cargo build 
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build artem release
        uses: actions-rs/cargo@v1
        continue-on-error: false 
        with:
          command: build 
          args: --locked --release --verbose

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: artem-${{ matrix.platform }}
          asset_path: ./target/release/artem
          asset_content_type: application/octet-stream


  release_deb:
    name: Create Debian
    needs: create_release # we need to know the upload URL
    runs-on: ${{ matrix.platform }} # we run many different builds
    strategy:
      matrix:
        platform: [ubuntu-latest]
        rust:
          - stable
          - beta
          - nightly
          - 1.58.1  # MSRV
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Install ${{ matrix.rust }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
      #use caching for cargo build 
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install cargo deb
        uses: actions-rs/cargo@v1
        continue-on-error: false 
        with:
          command: deb

      - name: Run cargo deb
        uses: actions-rs/cargo@v1
        continue-on-error: false 
        with:
          command: deb

      - name: Upload Debian Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: artem-${{ matrix.config.os }}
          asset_path: ./target/release/artem
          asset_content_type: application/octet-stream